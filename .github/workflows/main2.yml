# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest #ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@master
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          lfs: true
          
      - name: Setup MSBuild.exe
        uses: warrenbuckley/Setup-MSBuild@v1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
   
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.2
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'    
          
      - name: NuGet Restore
        run: nuget restore EVT.sln
        
      - name: Build Plugins with MSBuild
        working-directory: Plugins
        run: msbuild Plugins.csproj        
      
      - name: Copy plugin assemply to solution folder
        run: |
          copy Plugins/bin/Debug/EVTPlugins.dll Solution/package/PluginAssemblies/EVTPlugins-6758C8F1-34AF-4C22-B581-014E47FCDFA6

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Pack Solution
        uses: microsoft/powerplatform-actions/pack-solution@v0
        with:
          solution-file: 'out/evt_managed.zip'
          solution-folder: './Solution/package'
          solution-type: 'managed'
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Initial Release 1.0
          draft: false
          prerelease: false
